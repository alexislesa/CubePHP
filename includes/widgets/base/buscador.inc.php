<?php/** * @revision 20.03.2012 * Fix: Se modificó la forma en la que se consulta por un texto (var $q) para evitar XSS *//** * ******************************************************************** * Información básica para el buscador * * Retorna la siguiente información para acotar búsquedas: *	- $qText:			Texto a buscar *	- $qTipo:			Tipo de búsqueda de texto (todas las palabras, algunas, frase exacta) *	- $qOrden:			Tipo de ordenamiento de los resultados (fecha asc, fecha desc) *	- $qSeccion:		Secciones en las que debe realizar la búsqueda *	- $qFechaInicial:	Fecha inicial del rango de búsqueda *	- $qFechaFinal:		Fecha final del rango de búsqueda *	- $sqlFiltroArr:	Array con toda la información de filtros del buscador * ********************************************************************  */// Limpio todos los campos GET a procesar, evitando XSS$_GET = cleanArray($_GET); // Recupero información de búsqueda por texto$qText = (!empty($_GET['q']) && is_string($_GET['q'])) ? $_GET['q'] : '';/** * ******************************************* * Huevo de pascua: Klaatu Barada Nikto * ******************************************* */if (trim(strtolower($qText)) == 'klaatu barada nikto') {	$klaatu = "PGh0bWw+Cjx0aXRsZT5Hb3J0IEtsYWF0dSBCYXJhZGEgTmlrdG88L3RpdGxlPgo8Ym9keT4KPGlmcmFtZSBjbGFzcz0";	$klaatu.= "ieW91dHViZS1wbGF5ZXIiIHR5cGU9InRleHQvaHRtbCIgd2lkdGg9IjY2MCIgaGVpZ2h0PSI1MjUiIHNyYz0iaHR0cD";	$klaatu.= "ovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9zSWF4U3hFcUt0QSIgZnJhbWVib3JkZXI9IjAiPjwvaWZyYW1lPgo8L2JvZHk+CjwvaHRtbD4K";	echo base64_decode($klaatu);	exit();} /* ********************************************//** * Recupera el tipo de búsqueda por textos * Devuelve, según corresponda: *	- and: para filtrar por todas las palabras *	- or: para filtrar por cualquiera de las palabras *	- all: para filtrar por frase exacta */$qTipo = (!empty($_GET['qtipo']) && is_string($_GET['qtipo'])) ? $_GET['qtipo'] : 'and';/** * Indica el orden de los resultados * Valores: asc, desc */$qOrden = !empty($_GET['ord']) ? ($_GET['ord'] == 1 ? 1 : 0) : 0;$qOrden = ($qOrden) ? 'Asc' : 'Desc';/** * Realiza un filtro de fecha por rango */$oInicialDefault = time() - (60*60*24*30);	// últimos 30 días$oInicial = !empty($oInicial) ? $oInicial : $oInicialDefault;$oFinal = !empty($oFinal) ? $oFinal : time();list($ddia,$dmes, $danio) = explode('-', date('d-m-Y', $oInicial));list($hdia,$hmes, $hanio) = explode('-', date('d-m-Y', $oFinal));$ddia = isNumber(!empty($_GET['ddia']) ? $_GET['ddia'] : $ddia, $ddia);$dmes = isNumber(!empty($_GET['dmes']) ? $_GET['dmes'] : $dmes, $dmes);$danio = isNumber(!empty($_GET['danio']) ? $_GET['danio'] : $danio, $danio);$hanio = isNumber(!empty($_GET['hanio']) ? $_GET['hanio'] : $hanio, $hanio);$hmes = isNumber(!empty($_GET['hmes']) ? $_GET['hmes'] : $hmes, $hmes);$hdia = isNumber(!empty($_GET['hdia']) ? $_GET['hdia'] : $hdia, $hdia);/* Cargo excepción por si buscan en todo el año */if (!empty($_GET['dmes']) && $_GET['dmes'] == 'todos') {	$hmes =  12;	$hdia = 31;}$qFechaInicial = mktime(0,0,0, $dmes, $ddia, $danio);$qFechaFinal = mktime(23,59,0, $hmes, $hdia, $hanio);/** * Filtra por secciones en un modo de selector o checkbox  * para posibilitar buscar en varias secciones a la vez */$qSeccion = 0;if (!empty($_GET['seccion']) && is_array($_GET['seccion'])) {	$checkSec = true;	foreach ($_GET['seccion'] as $k => $v) {		$checkSec = ($checkSec && is_numeric($v));	}	if ($checkSec) {		$qSeccion = implode(',', $_GET['seccion']);	}}/* Cargo los filtros y facetas de la búsqueda */$sqlFiltroArr = array();/* Filtro por sección o secciones seleccionadas */if ($qSeccion) {	$sqlFiltroArr[] = "noticia_seccion_id IN({$qSeccion})";}/* Filtro por sección Facetada */if (!empty($_GET['sec']) && is_numeric($_GET['sec'])) {	$sqlFiltroArr[] = "noticia_seccion_id = '{$_GET["sec"]}'";}/* Filtros de fecha en rango (desde|hasta) */if ($qFechaInicial && $qFechaFinal) {	$sqlFiltroArr[] = "noticia_fecha_modificacion > {$qFechaInicial}";	$sqlFiltroArr[] = "noticia_fecha_modificacion < {$qFechaFinal}";}/* Filtro de fecha por Faceta por año */if (!empty($_GET['fecha-anio']) && is_numeric($_GET['fecha-anio'])) {	if ($fecha_anio = isNumber($_GET['fecha-anio'])) {		$sqlFiltroArr[] = "FROM_UNIXTIME(noticia_fecha_modificacion, '%Y') = '{$fecha_anio}'";	}}/* Filtro de fecha por Faceta por mes-año */if (!empty($_GET['fecha-mes']) && $_GET['fecha-mes'] != '') {	$fecha_mesx = explode('-',$_GET['fecha-mes']);	if ((count($fecha_mesx) == 2) && is_numeric($fecha_mesx[0]) && is_numeric($fecha_mesx[1])) {		$sqlFiltroArr[] = "FROM_UNIXTIME(noticia_fecha_modificacion, '%Y-%c') = '{$_GET['fecha-mes']}'";	}}/* Filtro de fecha por Faceta en rango de fecha */if (!empty($_GET['rango']) && $_GET['rango'] != '') {	$fCheckInicio = 0;	$fCheckFin = time();	// Rango: Hoy	if ($_GET['rango'] == 'hoy') {		$fCheckInicio = mktime(0,0,0,date('m'),date('d'), date('Y'));	// Rango: Ayer			} elseif ($_GET['rango'] == 'ayer') {		$fCheckInicio = mktime(0,0,0,date('m'),date('d')-1, date('Y'));		$fCheckFin = mktime(0,0,0,date('m'),date('d'), date('Y'));			// Rango: Esta semana	} elseif ($_GET['rango'] == 'semana') {				$fCheckInicio = mktime(0,0,0,date('m'),date('d')-7, date('Y'));		// Rango: Semana pasada	} elseif ($_GET['rango'] == 'old-semana') {		$fCheckInicio = mktime(0,0,0,date('m'),date('d')-14, date('Y'));		$fCheckFin = mktime(0,0,0,date('m'),date('d')-7, date('Y'));	// Rango: Este mes	} elseif ($_GET['rango'] == 'mes') {		$fCheckInicio = mktime(0,0,0,date('m')-1,1, date('Y'));	// Rango: Mes pasado			} elseif ($_GET['rango'] == 'old-mes') {		$fCheckInicio = mktime(0,0,0,date('m')-1,1, date('Y'));		$fCheckFin = mktime(0,0,0,date('m'),1, date('Y'));		// Rango: Últimos 30 días	} elseif ($_GET['rango'] == '30dias') {		$fCheckInicio = mktime(0,0,0,date('m'),date('d')-30, date('Y'));	// Rango: Último trimestre	} elseif ($_GET['rango'] == 'trimestre') {		$fCheckInicio = mktime(0,0,0,date('m')-3,1, date('Y'));	// Rango: Este año	} elseif ($_GET['rango'] == 'anio') {		$fCheckInicio = mktime(0,0,0,1,1, date('Y'));		// Rango: Años anteriores	} elseif ($_GET['rango'] == 'old-anio') {				$fCheckFin = mktime(0,0,0,1,1, date('Y'));	}	$sqlFiltroArr[] = "noticia_fecha_modificacion > {$fCheckInicio}";	$sqlFiltroArr[] = "noticia_fecha_modificacion < {$fCheckFin}";} //  End: faceta por fecha// Información de las secciones$secToFacetados = array();$oSqlTipo = ($itemTipo) ? " AND seccion_tipo IN ({$itemTipo})" : '';$oSqlSeccion = ($itemSeccion) ? " AND seccion_id IN ({$itemSeccion})" : '';$oSql = "SELECT * FROM noticias_secciones 	WHERE seccion_visible = 1 {$oSqlTipo} {$oSqlSeccion} 	ORDER BY seccion_orden, seccion_nombre, seccion_id";if ($res = $db->query($oSql)) {	for ($i=0; $i<$db->num_rows($res); $i++) {		$rs = $db->next($res);		$secToFacetados[$rs["seccion_id"]] = $rs;	}}// Recupero todas las variables enviadas vía get que no sean facetables$qInput = array();$qInputArr = array('q', 	'ddia', 'dmes','danio', 	'hdia', 'hmes', 'hanio', 	'ord', 'enviar', 'seccion_all', 'seccion');foreach ($_GET as $ki => $vi) {	if (!in_array($ki, $qInputArr)) {		if (is_array($vi)) {			foreach ($vi as $kii => $vii) {				$qInput[] = array($vi.'['.$kii.']', $vii);			}		} else {			$qInput[] = array($ki, $vi);		}	}} ?>